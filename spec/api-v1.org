#+title: API v1 — Публичные команды, переменные, лица
#+author: Peter Kosov <11111000000@email.com>
#+language: ru
#+options: toc:2 num:t
#+property: header-args :results silent

* Назначение
- Нормативный публичный API Carriage-mode v1: интерактивные команды, переменные, лица (faces).

* Интерактивные команды (stable)
- carriage-mode
  - Минор-режим; включает функциональность только в org-mode буферах.
- carriage-send-buffer (C-c M-RET)
  - Отправить весь документ в LLM с активным Intent (Ask|Code|Hybrid).
- carriage-send-subtree (C-c RET)
  - Отправить текущее поддерево org.
- carriage-apply-at-point (C-c C-c)
  - Dry-run → подтверждение → применить блок =patch= под точкой.
- carriage-apply-last-iteration (C-c !)
  - Применить все блоки последнего ответа.
- carriage-dry-run-at-point (C-c ?)
  - Только dry-run блока под точкой (или всей итерации с C-u).
- carriage-wip-checkout (C-c b c)
  - Создать/перейти на ветку carriage/WIP.
- carriage-show-log (C-c b l)
  - Показать лог применений.
- carriage-show-traffic (C-c b t)
  - Показать трафик LLM (вход/выход).
- carriage-show-log-and-traffic (C-c b L)
  - Открыть лог и трафик одновременно в правых боковых окнах.
- carriage-wip-reset-soft (C-c b r)
  - Откат последнего коммита (soft reset).
- carriage-commit-changes (C-c b m)
  - Выполнить коммит всех изменений согласно политике стадирования; один коммит.
- carriage-commit-last-iteration (C-c b i)
  - Выполнить коммит только файлов, изменённых «последней итерацией».
- carriage-select-apply-engine (C-c b e)
  - Выбрать/переключить движок применения (из реестра).
- carriage-toggle-intent
  - Переключить Intent (Ask|Code|Hybrid).
- carriage-select-suite
  - Выбрать Suite (sre|udiff).
- carriage-select-backend
  - Выбрать бэкенд (транспорт) LLM.
- carriage-select-model
  - Выбрать модель для текущего бэкенда.

* Программный интерфейс (Elisp)
- Парсинг/применение:
  - carriage-parse-blocks-in-region (beg end) → PLAN
  - carriage-collect-last-iteration-blocks () → PLAN
  - carriage-dry-run-plan (PLAN) → REPORT
  - carriage-apply-plan (PLAN) → RESULT             ; синхронная обёртка (deprecated)
  - carriage-apply-plan-async (PLAN ROOT CB) → TOKEN ; асинхронный запуск пайплайна; CB(REPORT); TOKEN для abort
- Реестр движков:
  - carriage-register-apply-engine (SYMBOL NAME IMPL) → t
  - carriage-apply-engine () → SYMBOL
  - carriage-select-apply-engine () → SYMBOL
- Служебные:
  - carriage-project-root () → DIR
  - carriage-generate-delim () → STRING
  - carriage-report-buffer () → BUFFER
  - carriage-log-buffer () → BUFFER
  - carriage-traffic-buffer () → BUFFER
  - carriage-clear-logs () → t
- Потоковая печать:
  - carriage-insert-stream-chunk (STRING &optional TYPE) → POS   ; TYPE ∈ ('text 'reasoning), вставляет в активный «ответный» регион
  - carriage-begin-reasoning () → POS                              ; открыть #+begin_reasoning при первом reasoning-чане
  - carriage-end-reasoning () → POS                                ; закрыть #+end_reasoning при (reasoning . t)/завершении
  - carriage-stream-region () → (BEG . END)                        ; текущие границы региона ответа в буфере
  - carriage-stream-reset () → t                                   ; сброс состояния печати (при новом запросе/ошибке/abort)

* Переменные Customize
- carriage-mode-default-intent (symbol) — 'Ask | 'Code | 'Hybrid
- carriage-mode-default-suite (symbol) — 'udiff (default)
- carriage-mode-default-backend (symbol|string) — имя бэкенда транспорта по умолчанию (например, 'gptel)
- carriage-mode-default-model (string) — имя модели для выбранного бэкенда
- carriage-mode-state-file (string) — путь к файлу состояния в проекте (".context/carriage/carriage-state.el")
- carriage-mode-wip-branch (string) — "carriage/WIP"
- carriage-mode-confirm-apply-all (boolean) — t
- carriage-mode-auto-open-report (boolean) — t
- carriage-mode-auto-open-log (boolean) — nil
- carriage-mode-auto-open-traffic (boolean) — nil
- carriage-mode-show-diffs (boolean) — t
- carriage-mode-show-header-line (boolean) — t
- carriage-mode-show-mode-line-ui (boolean) — t
- carriage-mode-spinner-interval (number) — 0.15
- carriage-mode-headerline-max-width (integer or nil) — nil
- carriage-mode-use-icons (boolean) — t
- carriage-mode-include-reasoning (symbol) — 'block | 'ignore — политика вставки reasoning в исходный буфер (по умолчанию 'block: #+begin_reasoning/#+end_reasoning)
- carriage-mode-allow-patch-binary (boolean) — nil (v1)
- carriage-mode-max-batch-pairs (integer) — лимит пар в SRE-блоке
- carriage-mode-sre-noop-on-zero-matches (boolean) — noop при 0 совпадений для :occur first

- carriage-mode-log-max-lines (integer) — предел строк для *carriage-log*/*carriage-report*.
- carriage-mode-traffic-max-lines (integer) — предел строк для *carriage-traffic*.
- carriage-mode-aux-window-side (symbol) — сторона бокового окна для логов/трафика: left|right|top|bottom.
- carriage-mode-aux-window-size (number) — относительный размер бокового окна (0–1).
- carriage-mode-aux-window-reuse (boolean) — переиспользовать уже открытое окно для буферов логов/трафика.
- carriage-apply-stage-policy (symbol) — 'none | 'index — политика стадирования (по умолчанию 'none).
- carriage-apply-async (boolean) — t; выполнять пайплайн асинхронно.
- carriage-apply-engine (symbol) — 'git (по умолчанию); имя активного движка из реестра.
- carriage-apply-engine-extra-args (alist) — дополнительные аргументы для движков (например, для 'git: (:apply ("--reject" "--whitespace=nowarn") :check ("--verbose"))).
- carriage-apply-timeout-seconds (number) — таймаут шага движка (см. FREEZE).
- carriage-apply-auto-commit (boolean) — nil; временная совместимость, автокоммит в apply (deprecated).
- carriage-commit-default-message (string|function) — шаблон сообщения коммита по умолчанию.

* Лица (faces)
- carriage-patch-valid-face
- carriage-patch-warning-face
- carriage-patch-error-face
- carriage-report-ok-face
- carriage-report-warn-face
- carriage-report-err-face

* Стабильность API
- Символы и сигнатуры в этом файле считаются стабильными для v1.
- Изменения возможны только добавлением новых опций/команд без ломки существующих.

* Дополнения v1.1 — модель, контекст, биндинги
- Новые/уточнённые команды:
  - carriage-select-model — минибуфер предзаполняется текущим полным идентификатором модели; кандидаты: "backend:provider:model", "backend:model". Рекомендуемый биндинг: C-c e m.
  - carriage-toggle-include-gptel-context — переключатель включения gptel-context (буферы/файлы) в запрос. Рекомендуемый биндинг: C-c e t c.
  - carriage-toggle-include-doc-context — переключатель включения файлов из блока #+begin_context. Рекомендуемый биндинг: C-c e t f.
- Новые/уточнённые переменные:
  - carriage-mode-include-gptel-context (boolean, default t) — включать gptel-context в запрос.
  - carriage-mode-include-doc-context (boolean, default t) — включать файлы из контекст-блока документа.
  - carriage-mode-context-injection (symbol, default 'system) — место инъекции контекста: 'system|'user.
  - carriage-mode-context-max-files (integer, default 100) — предел числа файлов из контекста.
  - carriage-mode-context-max-total-bytes (integer, default 1048576) — суммарный лимит байт включаемого содержимого.
- Норматив для префикса клавиш:
  - Все биндинги режима — под C-c e; исторические могут сохраняться как опциональная совместимость.
