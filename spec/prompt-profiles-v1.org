#+title: Prompt Profiles v1
#+author: Peter Kosov <11111000000@email.com>
#+language: ru
#+options: toc:2 num:t

* Назначение
- Нормативные профили промптов для режимов Ask/Code.
- Шаблоны ответов для поддерживаемых форматов v1: =sre=, =sre-batch=, =patch (unified diff)=, а также операции файлов =create/delete/rename=.
- Цель: минимизация галлюцинаций, максимальная воспроизводимость.

* Общие принципы
- В режиме Code модель ДОЛЖНА выдавать только блоки вида:
  - #+begin_patch (<plist>) … #+end_patch
- Никакого текста вне блоков.
- Один блок = одна операция (один файл для SRE/patch).
- Все переменные (DELIM, пути, режим и т.д.) предоставляет инструмент.

* Профиль Ask (диалог)
- Назначение: прояснение требований, сбор контекста, структурирование задачи.
- Допустим произвольный текст, списки, примеры кода (как обычный org).
- Запрещено генерировать =begin_patch= блоки в Ask-профиле.
- Рекомендуется завершать ответ перечнем «следующих шагов» для перехода к Code.

* Профиль Code (патчи)
** Общие регуляции
- Ответ содержит ТОЛЬКО блоки =begin_patch/end_patch=.
- Строгое соблюдение грамматики соответствующего формата.
- Модель НЕ выбирает DELIM; инструмент подставляет в пользовательский промпт значение DELIM и пути.
- Пути только относительные к корню проекта.

** SRE (одна пара)
- Инструкция (шаблон для встраивания в системный промпт):
  - Сгенерируй один блок:
    - #+begin_patch (:version "1" :op "sre" :file "RELATIVE/PATH" :delim "DELIM")
    - <<DELIM
    - FROM-текст
    - :DELIM
    - <<DELIM
    - TO-текст
    - :DELIM
    - #+end_patch
  - Ничего вне блока. Не изменяй DELIM. Путь относительный.

** SRE-BATCH (несколько пар для одного файла)
- Инструкция:
  - Сгенерируй один блок:
    - #+begin_patch (:version "1" :op "sre-batch" :file "RELATIVE/PATH" :delim "DELIM")
    - [опционально: #+pair (<plist>) — опции для СЛЕДУЮЩЕЙ пары]
    - <<DELIM … :DELIM  ; FROM
    - <<DELIM … :DELIM  ; TO
    - … повторять по необходимости …
    - #+end_patch
  - Для :occur all обязательно укажи :expect. Не изменяй DELIM.

** PATCH (unified diff, один файл)
- Инструкция:
  - Сгенерируй один блок:
    - #+begin_patch (:version "1" :op "patch" :apply "git-apply" :strip 1)
    - <unified diff РОВНО ОДНОГО файла>
    - #+end_patch
  - Строго соблюдай синтаксис unified diff. Пути начинаются с a/ и b/.

** FILE OPS (create/delete/rename)
- create:
  - Сгенерируй блок:
    - #+begin_patch (:version "1" :op "create" :file "RELATIVE/PATH" :delim "DELIM")
    - <<DELIM
    - СОДЕРЖИМОЕ ФАЙЛА
    - :DELIM
    - #+end_patch
- delete:
  - Сгенерируй блок:
    - #+begin_patch (:version "1" :op "delete" :file "RELATIVE/PATH")
    - #+end_patch
- rename:
  - Сгенерируй блок:
    - #+begin_patch (:version "1" :op "rename" :from "OLD/RELATIVE/PATH" :to "NEW/RELATIVE/PATH")
    - #+end_patch

* Стратегии контекста (вставка инструментом)
- Для отправки всего документа:
  - Заголовок/метаданные документа; указание корня репозитория; перечень релевантных секций.
- Для ветки (поддерева):
  - Указание абсолютного пути в org-outline; краткое саммари родительских узлов.
- Усечение:
  - Уменьшать нерелевантный текст; оставлять примеры и фрагменты, критичные для изменений.

* Guardrails (минимизация ошибок модели)
- Повтор одного и того же DELIM в SRE-шаблонах (FROM/TO) снижает шанс «потери» маркера.
- Явный запрет текста вне блоков.
- Чёткие примеры, соответствующие формату; минимум вариативности.
- Запрет на base64 по умолчанию (инструмент сам выполнит fallback при необходимости).

* Диагностика несоответствия промпту
- Если ответ содержит текст вне =patch=, инструмент:
  - Либо фильтрует и оставляет только валидные блоки,
  - Либо запрашивает перегенерацию (политика настройки).
- Неизвестные :op или :version → отказ и перегенерация с кратким пояснением.

* Примеры итоговых сообщений (вставка инструментом)
** Code/SRE-BATCH
- Делимитер: "d7e2b5"
- Файл: "src/app.py"
- Требуемые замены: …
- Сгенерируй блок согласно шаблону ниже и не добавляй ничего вне него.
