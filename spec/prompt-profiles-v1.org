#+title: Suites v1 — Intent/Suite и композиция промптов
#+author: Carriage Team
#+language: ru
#+options: toc:2 num:t

* Назначение
- Норматив Intent/Suite для режимов диалога и патчей.
- Шаблоны ответов для форматов v1 (=sre=, =patch=, =create/delete/rename=) определяются через композицию промпт-фрагментов, поставляемых op-модулями.
- Цель: минимизация вариативности, расширяемость через добавление новых :op без правок ядра.

* Термины
- Intent — смысл ответа: Ask (свободный диалог) или Patch (строго патчи).
- Suite — «набор речи» для Patch: перечень разрешённых :op и собранный системный промпт из фрагментов соответствующих op-модулей.

* Общие принципы (Patch/Intent)
- В Intent=Patch модель ДОЛЖНА выдавать только блоки:
  - #+begin_patch (<plist>) … #+end_patch
- Никакого текста вне блоков.
- Один блок = одна операция — см. ./index.org (Инварианты v1).
- Все переменные (DELIM, пути и т.д.) предоставляет инструмент (Carriage).

* Intent: Ask (диалог)
- Назначение: прояснение требований, сбор контекста.
- Допустим произвольный текст org; запрещены =begin_patch= блоки.
- Рекомендуется завершать ответ «следующими шагами» для перехода к Patch.

* Intent: Patch (патчи) и Suites
** Базовые сьюиты v1
- 'sre-v1 — разрешены :op (sre, create, delete, rename).
- 'patch-v1 — разрешены :op (patch, rename).
- 'file-ops-v1 — разрешены :op (create, delete, rename).
- 'auto-v1 — разрешены все из v1 (sre, patch, create, delete, rename).

** Композиция промпта
- Каждый op-модуль (например, lisp/ops/carriage-op-sre.el) публикует фрагмент промпта и регистрирует parse/dry-run/apply.
- Suite объявляет (:ops-allowed …) и собирает системный промпт как конкатенацию фрагментов разрешённых ops, добавляя строгости (никакого текста вне блоков, только begin_patch).
- Инструмент подставляет пути; DELIM используется только там, где требуется форматом (например, create) и всегда задаётся инструментом.

** Общие регуляции
- Ответ содержит ТОЛЬКО блоки =begin_patch/end_patch=.
- Строгое соблюдение грамматики соответствующего формата.
- Пути: см. ./security-v1.org (только относительные; запрет абсолютов и «..»).

* Фрагменты для форматов (встраиваются Suite-ом)
** SRE (1..N пар в одном блоке)
- Шаблон:
  - #+begin_patch (:version "1" :op "sre" :file "RELATIVE/PATH")
  - [опционально: #+pair (<plist>) — опции для СЛЕДУЮЩЕЙ пары]
  - #+begin_from
  - FROM-текст
  - #+end_from
  - #+begin_to
  - TO-текст
  - #+end_to
  - … повторять пары по необходимости …
  - #+end_patch
- Замечания:
  - Ничего вне блока. Сначала begin_from/end_from, затем begin_to/end_to для КАЖДОЙ пары.
  - Если внутри содержимого встречается строка «#+end_from» или «#+end_to», поставь перед ней один пробел.

** PATCH (unified diff, один файл)
- Шаблон:
  - #+begin_patch (:version "1" :op "patch" :strip 1)
  - <unified diff РОВНО ОДНОГО файла>
  - #+end_patch
- Замечания:
  - Строго соблюдай unified diff; пути a/ и b/ указывают на один и тот же относительный путь.

** FILE OPS (create/delete/rename)
- create:
  - #+begin_patch (:version "1" :op "create" :file "RELATIVE/PATH" :delim "DELIM")
  - <<DELIM
  - СОДЕРЖИМОЕ ФАЙЛА
  - :DELIM
  - #+end_patch
- delete:
  - #+begin_patch (:version "1" :op "delete" :file "RELATIVE/PATH")
  - #+end_patch
- rename:
  - #+begin_patch (:version "1" :op "rename" :from "OLD/RELATIVE/PATH" :to "NEW/RELATIVE/PATH")
  - #+end_patch

* Стратегии контекста (вставка инструментом)
- Весь документ (C-c M-RET) или поддерево (C-c RET) — инструмент формирует system/prompt с учётом Suite и контекста проекта.
- Усечение при переполнении токенов: сокращать нерелевантные разделы, оставлять критичные примеры.

* Guardrails (минимизация ошибок модели)
- Явные маркеры begin_from/begin_to фиксированы; экранируй строки «#+end_from»/«#+end_to» одним пробелом.
- Не используй :delim в SRE; :delim применяется только для create.
- Мини-шаблон пары: begin_from…end_from → begin_to…end_to.
- Для :occur all обязателен :expect (иначе блок будет отклонён).
- Явный запрет текста вне блоков.
- Примеры соответствуют формату; минимум вариативности.
- Запрет на base64 по умолчанию (инструмент делает fallback сам).

* Диагностика несоответствия
- Текст вне =patch= → фильтрация/перегенерация (по политике).
- Неизвестные :op/:version → отказ и перегенерация с пояснением.

* Примеры итоговых сообщений (вставка инструментом)
** Patch/SRE (пример)
- Файл: "src/app.py"
- Требуемые замены: …
- Сгенерируй блок согласно шаблону ниже и не добавляй ничего вне него.
