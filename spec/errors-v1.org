#+title: Errors and Diagnostics v1
#+author: Peter Kosov <11111000000@email.com>
#+language: ru
#+options: toc:2 num:t

* Назначение
- Унифицированные коды ошибок и формат сообщений для всех подсистем.

* Пространства кодов
- MODE_E_* — ошибки режима/диспетчеризации (пример: MODE_E_DISPATCH).
- SRE_E_* — ошибки формата SRE (см. ./sre-v1.org).
- PATCH_E_* — ошибки формата unified diff (см. ./patch-unified-diff-v1.org).
- GIT_E_* — ошибки взаимодействия с Git (apply, index, commit).
- IO_E_* — ошибки ввода/вывода (нет файла, права, конфликт блокировок).
- LLM_E_* — ошибки транспорта LLM/агентов (см. ./llm-transport-v1.org).

* Перечни кодов (минимум v1)
- SRE_E_*:
  - SRE_E_VERSION, SRE_E_OP, SRE_E_PATH, SRE_E_SEGMENTS_COUNT, SRE_E_UNPAIRED, SRE_E_UNCLOSED_BLOCK, SRE_E_OCCUR_EXPECT, SRE_E_REGEX_SYNTAX, SRE_E_NO_MATCHES, SRE_E_EXPECT_MISMATCH, SRE_E_LIMITS.
- PATCH_E_*:
  - PATCH_E_VERSION, PATCH_E_OP, PATCH_E_APPLY, PATCH_E_MULTI_FILE, PATCH_E_PATH, PATCH_E_PATH_MISMATCH, PATCH_E_DIFF_SYNTAX, PATCH_E_STRIP, PATCH_E_GIT_CHECK, PATCH_E_BINARY, PATCH_E_RENAME_COPY, PATCH_E_LIMITS.
- OPS_E_*:
  - OPS_E_EXISTS, OPS_E_NOT_FOUND, OPS_E_PATH, OPS_E_PERM, OPS_E_DELIM.
- LLM_E_*:
  - LLM_E_BACKEND, LLM_E_REQUEST, LLM_E_STREAM, LLM_E_TOOL_USE, LLM_E_SCHEMA.
- WARNINGS (SRE_W_*):
  - SRE_W_RANGE_CLAMP — диапазон :range был скорректирован до границ файла.

* Формат диагностического сообщения
- Поля:
  - code: символьный код (например, SRE_E_SEGMENTS_COUNT)
  - severity: info|warn|error
  - file/path: относительный путь (если применимо)
  - op/id: тип операции и/или идентификатор блока (если есть)
  - details: человеко-дружественное описание
  - hint: возможное решение (опционально)
- Локализация:
  - en/ru строки; выбор языка по настройке (default: ru).

* Маппинг на условия Emacs Lisp
- Каждая ошибка сигнализируется через condition-case с собственным type (symbol).
- Таблица соответствий: code → symbol.
- Примеры и хелперы:
#+begin_src emacs-lisp
;; Таблица соответствий code → symbol → message (ru)
(defconst carriage--error-table
  '(
    (SRE_E_VERSION          carriage-sre-version          "Неверная версия (SRE_E_VERSION)")
    (SRE_E_OP               carriage-sre-op               "Неверное значение :op (SRE_E_OP)")
    (SRE_E_PATH             carriage-sre-path             "Недопустимый путь (SRE_E_PATH)")
    (SRE_E_SEGMENTS_COUNT   carriage-sre-segments-count   "Нет ни одной пары (SRE_E_SEGMENTS_COUNT)")
    (SRE_E_UNPAIRED         carriage-sre-unpaired         "FROM без последующего TO (SRE_E_UNPAIRED)")
    (SRE_E_UNCLOSED_BLOCK   carriage-sre-unclosed-block   "Незакрытый блок FROM/TO (SRE_E_UNCLOSED_BLOCK)")
    (SRE_E_OCCUR_EXPECT     carriage-sre-occur-expect     "Для :occur all требуется :expect (SRE_E_OCCUR_EXPECT)")
    (SRE_E_REGEX_SYNTAX     carriage-sre-regex-syntax     "Неподдерживаемый синтаксис regexp (SRE_E_REGEX_SYNTAX)")
    (SRE_E_NO_MATCHES       carriage-sre-no-matches       "Совпадений не найдено (SRE_E_NO_MATCHES)")
    (SRE_E_EXPECT_MISMATCH  carriage-sre-expect-mismatch  "Число замен не соответствует :expect (SRE_E_EXPECT_MISMATCH)")
    (SRE_E_LIMITS           carriage-sre-limits           "Превышены лимиты размера (SRE_E_LIMITS)")

    (PATCH_E_VERSION        carriage-patch-version        "Неверная версия (PATCH_E_VERSION)")
    (PATCH_E_OP             carriage-patch-op             "Неверное значение :op (PATCH_E_OP)")
    (PATCH_E_APPLY          carriage-patch-apply          "Ошибка применения diff (PATCH_E_APPLY)")
    (PATCH_E_MULTI_FILE     carriage-patch-multi-file     "Многофайловый diff запрещён (PATCH_E_MULTI_FILE)")
    (PATCH_E_PATH           carriage-patch-path           "Недопустимый путь (PATCH_E_PATH)")
    (PATCH_E_PATH_MISMATCH  carriage-patch-path-mismatch  "Пути a/ и b/ различаются (PATCH_E_PATH_MISMATCH)")
    (PATCH_E_DIFF_SYNTAX    carriage-patch-diff-syntax    "Синтаксическая ошибка diff (PATCH_E_DIFF_SYNTAX)")
    (PATCH_E_STRIP          carriage-patch-strip          "Несогласован :strip (PATCH_E_STRIP)")
    (PATCH_E_GIT_CHECK      carriage-patch-git-check      "git apply --check отказал (PATCH_E_GIT_CHECK)")
    (PATCH_E_BINARY         carriage-patch-binary         "Бинарные секции запрещены (PATCH_E_BINARY)")
    (PATCH_E_RENAME_COPY    carriage-patch-rename-copy    "rename/copy запрещены в v1 (PATCH_E_RENAME_COPY)")
    (PATCH_E_LIMITS         carriage-patch-limits         "Превышены лимиты размера патча (PATCH_E_LIMITS)")

    (OPS_E_EXISTS           carriage-ops-exists           "Объект уже существует (OPS_E_EXISTS)")
    (OPS_E_NOT_FOUND        carriage-ops-not-found        "Объект не найден (OPS_E_NOT_FOUND)")
    (OPS_E_PATH             carriage-ops-path             "Недопустимый путь (OPS_E_PATH)")
    (OPS_E_PERM             carriage-ops-perm             "Недостаточно прав (OPS_E_PERM)")
    (OPS_E_DELIM            carriage-ops-delim            "Неверный :delim (OPS_E_DELIM)")

    (MODE_E_DISPATCH        carriage-mode-dispatch        "Неизвестные :version или :op (MODE_E_DISPATCH)")
    (GIT_E_APPLY            carriage-git-apply            "Ошибка git apply (GIT_E_APPLY)")
    (IO_E_PATH              carriage-io-path              "Ошибка доступа к пути (IO_E_PATH)")
    ))

(defun carriage-define-errors ()
  "Зарегистрировать условия ошибок согласно carriage--error-table."
  (dolist (row carriage--error-table)
    (pcase-let ((`(,code ,sym ,msg) row))
      (ignore-errors (define-error sym msg))))
  t)

(defun carriage-error-symbol (code)
  "Вернуть symbol условия по коду CODE (символ вроде SRE_E_...)."
  (cadr (assq code carriage--error-table)))

(defun carriage-error-message (code)
  "Вернуть строку сообщения по коду CODE."
  (caddr (assq code carriage--error-table)))

;; Пример единичного определения (совместимо со старым видом):
(define-error 'carriage-sre-segments-count "Неверное число сегментов (SRE_E_SEGMENTS_COUNT)")
#+end_src
